<%- include('../includes/head.ejs') %>
</head>
<body>
<%- include('../includes/nav.ejs') %>
<div id="project-section">

    <div class="container p-1">
        <div class="row">
            <div class="project-user col s12 l3">
                <div class="p-1 z-depth-1 project-user-div">
                    <div class="hide-on-med-and-down">
                        <img class="circle z-depth-1" src="<%= project.user.avatar %>" alt="<%= project.user.name %>">
                    </div>

                    <div>
                        <p class="user-name poppins-text hide-on-med-and-down"><a href="/profile/<%= project.user._id.toString() %>" ><%= project.user.userName %></a></p>
                        <% if(isAuthenticated) { %>
                            <% if (sessionUser._id.toString() == project.user._id.toString() ) { %>
                                <div class="divider"></div>
                                <div class="auth-user-actions my-1">
                                <a href="/projects/edit-project/<%= project._id.toString() %>" type="submit" class="btn waves-effect deep-purple lighten-1 tooltipped" data-tooltip="edit project"><i class="material-icons">edit</i></a>

                                    
                                    <form id="dpf" action="/projects/delete-project/<%= project._id.toString() %>" method="POST">
                                        <a href="javascript:{}" onclick="document.getElementById('dpf').submit()" type="submit" class="btn waves-effect deep-purple lighten-1 tooltipped" data-tooltip="delete project"><i class="material-icons">delete</i></a>
                                    </form>
                                </div>
    
                            <% } %>
                        <% } %>
                    </div>

                </div>
            </div>
            <div class="project-div col s12 l9 z-depth-1">
                <div class="carousel carousel-slider my-1 p-1">
                    <% project.images.forEach((img, index) => {  %>
                    <a class="carousel-item" href="#<%= index %>"><img height="100%" src="<%= img.url %>"></a>
                    <% }); %>
                  </div>
                <div class="project-vote-div p-1 poppins-text">
                   50
                   <a href="#upvote" class="upvote-btn">
                       <i class="material-icons">arrow_upward</i>
                   </a> 
                  <a href="#downvote" class="downvote-btn">
                       <i class="material-icons">arrow_downward</i>
                   </a>
                </div>
                <div class="project-detailed-div p-1">
                    <h5 class='text-header center-align poppins-text' style="margin-top: 0rem;"><%= project.name %>
                   </h5>
                   <div class="links-div">
                       <a href="<%= /https/i.test(project.links.demo) == true ? project.links.demo : '#' %>" class="btn deep-purple lighten-1"><i class="material-icons tooltipped" data-tooltip="deployment">cloud</i></a>
                       <a  href="<%= /https/i.test(project.links.sourceCode) == true ? project.links.sourceCode : '#' %>" class="btn deep-purple lighten-1 tooltipped" data-tooltip="src code"><i class="material-icons source">source</i></a>
                   </div>
                   <p class="project-description-text poppins-text"><%= project.description %></p>
                   
                   <div class="project-tech-stack-div">
                    <% project.technologies.forEach(technology => { %>
                        <img
                        class="tech-stack-img tooltipped"
                        data-tooltip="<%= technology %>"
                        src="/assets/techstack/<%= technology %>.svg"
                        alt="<%= technology %>"
                      />                                          
                       <% }); %>
                   </div>
                </div>
                <div class="comment-section p-1">

                    <% if (isAuthenticated) { %>
                        <div id='session-user' style="display: none;" data-name='<%= sessionUser.userName %>' data-avatar="<%= sessionUser.avatar %>"></div>
                    <% } %>

                    <div class="comments-show-div">
                        <a href="#" class="btn deep-purple waves-effect lighten-1 poppins-text comments-toggle-btn" style="display:inline-flex;align-items: center;"><i class="material-icons">comment</i>&ThinSpace;
                            (<%= project.comments.length %>)</a>
                    </div>

                    <div class="comments-box my-1" id="comments-box" style="display: none;">

                        <% if (isAuthenticated) { %>
                            <div class="user-comment-div row" id="add-comment-div">
                                <div class="user-pfp col s2 l1"><img class="z-depth-1" src="<%= sessionUser.avatar %>" alt="#"></div>
                                <div class="user-comment col s9 l10"><textarea name="textarea" class="materialize-textarea" id="" cols="30" rows="10"></textarea></div>
                                <span class="col s1" style="transform: translateY(10px);"><i class="material-icons add-comment">send</i></span>
                            </div>
                        <% } %>

                        <% project.comments.forEach((comment) => { %>
                            <div class="comment row" data-id="<%= comment._id.toString() %>">
                                <div class="user-pfp col s2 l1"><img class="z-depth-1" src="<%= comment.user.avatar %>" alt="#"></div>
                                <div class="user-comment col s9 l10" >
                                <a href="#user-profile-link poppins-text" class="user-name"><%= comment.user.userName %></a>
                                <div class="user-comment" style="font: Roboto;font-size: 1.13rem;">
                                    <p><%= comment.text %></p>
                                </div>
                                </div>
                                <% if (isAuthenticated) { %>
                                    <% if (comment.user._id.toString() == sessionUser._id.toString() ) { %>
                                        <span class="col remove-comment s1" style="transform: translateY(10px);"><i class="material-icons remove-comment">delete</i></span>
                                    <% } %>
                                <% } %>
                            </div>
                        <% }); %>
            
                    </div>  
                </div>
            </div>
        </div>
    </div>
</div>
 <script>
    async function voteProject(e) {
        try {
            const voteType = e.target.getAttribute('data-type');

            if(e.target.classList.contains('already-voted')) {
                throw new Error('you have already upvoted/downvoted!');
            }

            const response = await fetch("http://localhost:3000/project/<%= project._id.toString() %>/vote",{
                method: 'POST',
                body: new URLSearchParams({
                    'type':voteType,
                }) 
            })

            if (response.status == 409) {
                const {message} = await response.json(); 
                throw Error(message); 
            }

            if (e.target.classList.contains("upvote-btn")) {
                e.target.nextElementSibling.classList.remove("aleady-voted");
            } else {
                e.target.previousElementSibling.classList.remove("already-voted");
            }

            e.target.classList.add("already-voted")

        } catch(err) {
            M.toast({html:`<p class='poppins-text'>${err.message}</p>`});
        }
    }    
    async function addComment(e) {

        try {
            if (e.previousElementSibling.firstElementChild.value.trim() == '') {
                throw new Error('comment cannot be empty');
            }
    
            
            const response = await fetch('http://localhost:3000/project/<%= project._id.toString() %>/add-comment',{
                method:'POST',
                body: new URLSearchParams({
                    'comment': e.previousElementSibling.firstElementChild.value.trim(),
                }),
            });
            
            const {uid}= await response.json();

            const comment = document.createElement('div');
            comment.classList.add('comment','row');   
            comment.setAttribute('data-id',uid); 

            const userName = document.getElementById('session-user').getAttribute('data-name');
            const avatar = document.getElementById('session-user').getAttribute('data-avatar');
            
            //TODO: handle not authenticatedState edge case
            comment.innerHTML = 
            ` <div class="user-pfp col s2 l1"><img class="z-depth-1" src="${avatar}" alt="#"></div>
                    <div class="user-comment col s9 l10" >
                        <a href="#user-profile-link poppins-text" class="user-name">${userName}</a>
                        <div class="user-comment" style="font: Roboto;font-size: 1.13rem;">
                            <p>${e.previousElementSibling.firstElementChild.value.trim()}</p>
                    </div>
                 </div>
            <span class="col delete-comment s1" style="transform: translateY(10px);"><i class="material-icons remove-comment">delete</i></span>
            `;
    
            e.parentElement.parentElement.insertBefore(comment, e.parentElement.nextElementSibling);
            e.previousElementSibling.firstElementChild.value = null;

        } catch(err) {
            M.toast({html:`<p class='poppins-text'>${err.message}</p>`})

        }

    }

    async function removeComment(e) {

        const commentId = e.parentElement.getAttribute('data-id');  

        await fetch(`http://localhost:3000/project/<%= project._id.toString() %>/delete-comment/${commentId}`,{
            method:'POST'
        });
        e.parentElement.remove();

    }

    document.getElementById('comments-box').addEventListener('click',async (e) => {
        if (e.target.classList.contains('add-comment')) {
        addComment(e.target.parentElement);

        } else if (e.target.classList.contains('remove-comment')) {
            removeComment(e.target.parentElement);
        }
    });

    document.querySelector('.comments-toggle-btn').addEventListener('click',(e) => {
        e.preventDefault();
        const commentBox = document.getElementById('comments-box');
        const state = commentBox.style.display;
        commentBox.style.display = state == 'none' ? 'block': 'none';
    });

</script>

<%-include ('../includes/end.ejs') %>


